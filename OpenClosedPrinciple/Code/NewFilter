public interface ISpecification<T> 
    {
        bool IsSatisfied(T t);
    }
	
    public interface IFilter<T>
    {
        IEnumerable<T> Filter(IEnumerable<T> items, ISpecification<T> spec);
    }
	
    public class ColorSpecification : ISpecification<Product>
    {
        private readonly Color _color;

        public ColorSpecification(Color color)
        {
            _color = color;
        }



        public bool IsSatisfied(Product t)
        {
            return t.Color == _color;
        }
    }

    public class SizeSpecification : ISpecification<Product>
    {
        private Size size;

        public SizeSpecification(Size size)
        {
            this.size = size;
        }

        public bool IsSatisfied(Product p)
        {
            return p.Size == size;
        }
    }
    public class AndSpecification : ISpecification<Product>
    {
        private ISpecification<Product> _first, _second;

        public AndSpecification(ISpecification<Product> first, ISpecification<Product> second)
        {
            _first = first;
           _second = second;
        }

        public bool IsSatisfied(Product p)
        {
            return _first.IsSatisfied(p) && _second.IsSatisfied(p);
        }

       
    }

    public class NewProductFilter : IFilter<Product>
    {
        public IEnumerable<Product> Filter(IEnumerable<Product> items, ISpecification<Product> spec)
        {
            foreach (var item in items)
            {
                if (spec.IsSatisfied(item))                
                    yield return item;
                
            }
        }
    }
	
	
	
	in Programe Class 
	
	  Console.WriteLine("New Filter");
            var newFilter = new NewProductFilter();
            foreach (var p in newFilter.Filter(products, new ColorSpecification(Color.Green)))
                Console.WriteLine($" - {p.Name} is green");


            Console.WriteLine("Large blue items");
            foreach (var p in newFilter.Filter(products,
              new AndSpecification(new ColorSpecification(Color.Blue), new SizeSpecification(Size.Large)))
            )
            {
                Console.WriteLine($" - {p.Name} is big and blue");
            }